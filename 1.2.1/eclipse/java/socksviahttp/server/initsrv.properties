#####################################
# Socks via HTTP server property file
#####################################

# THIS FILE IS USED BY SOCKS VIA HTTP SERVER PART
# PLEASE BE CAREFUL WHEN YOU EDIT IT, OR THE PROGRAM WON'T WORK
# IF YOU MODIFY THIS FILE, PLEASE RESTART THE SERVER

# DO NOT MODIFY THE FOLLOWING LINE
[SocksViaHttp]

#----------------------
# Logging configuration
#----------------------

# Path of the logfile
server.logfile.name = socksserver.log
# Logfile level (0=ALL, 1=DEBUG, 2=INFO, 3=WARN, 4=ERROR, 5=FATAL, 6=OFF), level 6 means no logging to file
server.logfile.level = 2
# Console logging level (0=ALL, 1=DEBUG, 2=INFO, 3=WARN, 4=ERROR, 5=FATAL, 6=OFF), level 6 means no output to stdout
server.logconsole.level = 2

#---------------------
# Server configuration
#---------------------

# URL of the Administration console on the server, please replace "www.yourserver.com" by your server public name
# If you have changed the default HTTP port of the server (in the file inithttpsrv.properties), please replace "80" in the following line by the port you set
socks.admin.servlet.url = http://www.yourserver.com:80/svhadmin

# Here you have to specify the administrator password (needed to access the administration console)
socks.admin.login = ADMINLOGIN
socks.admin.password = ADMINPASSWORD

# Timeout in seconds for a connection
# 0 means no timeout
# If a connection isn't used during this time, it is automatically closed
# The default value (10mn) should be OK. Please note that actually the server
# uses the minimum value between socks.timeout and socks.httpserver.timeout (defined in the client configuration file:init.properties)
socks.timeout = 600

# Secret encryption key of the server. You MUST define a value here.
# If you don't want to use encryption, leave the default value.
socks.encryptionkey = MY_SOCKS_VIA_HTTP_SECRET_ENCRYPTION_KEY

#--------------------
# Users configuration
#--------------------

# List of the users - Please replace USER1, USER2, ... by your users logins
# In the example I create only 2 logins but you can specify less or more (separator is comma)
socks.server.users = USER1, USER2

# Passwords of the users - Here you have to specify the password for each login
# You have to add 1 line per login
# For example replace USER1 by the user login and PASS1 by the user password in the following line
users.password.USER1 = PASS1
users.password.USER2 = PASS2

# Authorized IP for the users - You have to specify, for each user, the list of IP he is authorized to connect from.
# If you don't understand, just add 1 line per login with *.*.*.* (like in the following line)
users.ip.USER1 = *.*.*.*
users.ip.USER2 = 192.168.0.*, 192.168.1.*

# Maximum connection time in seconds for the users (0 = no limit)
# Any connection (in use or not) will be closed by the server after the time you specify here
users.authorizedtime.USER1 = 0
users.authorizedtime.USER2 = 0

# Spy mode
# This mode allows the server to create a file per connection, containing all the transferred datas (for a given user)
# Be careful, the logfiles can be very large. I recommend to leave it disabled
# DO NOT USE IT TO SPY THE USERS WITHOUT WARNING THEM BEFORE
# The value can be 0(none), 1(log the datas sent by the client), 2(log the datas sent by the server)
# or 3(log both datas)
#users.spymode.USER1 = 3
#users.spymode.USER2 = 0
